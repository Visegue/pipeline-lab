# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name:  "ðŸš¢ Lint & Build"

on: 
  workflow_call:
    inputs:
      build-container:
        required: false
        default: true
        type: boolean
        description: "If a container should be built or not"


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'npm'
    # Cache for nextjs: https://nextjs.org/docs/messages/no-cache#github-actions
    - uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - run: npm ci
    - run: npm run lint
    - run: npm run build --if-present

  build-container:
    runs-on: ubuntu-latest
    if: inputs.build-container == true
    
    steps:
    # Could set manual names and labels, but using metadata extractor as it
    # simplifies the use of github.repository for image name.
    # build docker images requires lowercase names, not the case with
    # our current organization, metadata will fix that.
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
