# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name:  "ðŸ“„ Generate HelmRelease manifest"

on: 
  workflow_call:
    inputs:
      name:
        required: false
        type: string
        default: ${{ github.event.repository.name }}
        description: "Name of the generated HelmRelease"
      chart-source:
        required: false
        type: string
        default: "HelmRepository/visegue-public"
        description: "The named repository (source in flux) that the chart will be read from"
      chart:
        required: false
        type: string
        default: ${{ github.event.repository.name }}
        description: "The chart used in the HelmRelease manifest (that will be used for deploy)."
      namespace:
        required: false
        type: string
        default: "default"
        description: "The namespace used for applying the HelmRelease manifest"
      interval:
        required: false
        type: string
        default: "10m"
        description: "The flux sync interval for the generated HelmRelease"
      value-files:
        required: false
        type: string
        default: "['./helm/values/values.yaml']"
        description: "Comma separeted list of search paths of value files used for the chart. Search paths relative to the workspace"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: fluxcd/flux2/action@main
      with:
          version: 0.30.2
    - name: Generate values list
      # Works by:
      # Removing whitespaces: ${${{ inputs.value-filesÂ }}// /}
      # Doing evalution with brace epxansion (eval needs becase we're doing brace expansion on a variable)
      run: eval echo "::set-output name=values::--values={${${{ inputs.value-filesÂ }}// /}}"
      id: values_list
    - name: Run Flux commands
      run: flux create hr ${{ inputs.name }} --source=${{ inputs.chart-source }} --chart=${{ inputs.chart }} ${{ steps.values_list.outputs.values }} --interval=${{ inputs.interval }} --namespace=${{ inputs.namespace }} --export
